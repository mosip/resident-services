AuthUnlock:
   Resident_AuthUnLock_Valid_UIN_All:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock all authentication type using a valid UIN
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"},{auth: "demo"},{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Valid_VID_All:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock all authentication type using a valid VID
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "individualIdType": "VID",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"},{auth: "demo"},{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_VID_Use_Three_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock authentication types using valid VID through three possible elements
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:Generate_Perpetual_VID_SecondTime_Smoke_sid_vid$",
        "individualIdType": "VID",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"},{auth: "demo"},{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_ToCreate_PreVid_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:Generate_Perpetual_VID_SecondTime_Smoke_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_VID_Use_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock authentication types using valid VID through possible elements
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:Generate_Perpetual_VID_SecondTime_Smoke_sid_vid$",
        "individualIdType": "VID",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"},{auth: "demo"},{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_ToCreate_PreVid_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:Generate_Perpetual_VID_SecondTime_Smoke_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_AuthUnLock_UIN_All_Invalid_Unlock_Seconds:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock all authentication types using a valid UIN with an invalid unlockForSeconds
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "tt",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"},{auth: "demo"},{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
        {
            "errorCode": "RES-SER-410",
            "message": "$IGNORE$"
        }
    ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_VID_All_Invalid_Unlock_Seconds:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock all authentication types using a valid VID with an invalid unlockForSeconds
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "individualIdType": "VID",
        "unlockForSeconds": "tt",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"},{auth: "demo"},{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
        {
            "errorCode": "RES-SER-410",
            "message": "$IGNORE$"
        }
    ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Valid_UIN_smoke_demo_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the demo authentication type using a valid UIN
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "demo"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_UIN_Invalid_Unlock_Seconds_demo_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the demo authentication type using valid UIN with an invalid unlockForSeconds
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "tt",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "demo"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
        {
            "errorCode": "RES-SER-410",
            "message": "$IGNORE$"
        }
    ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Valid_VID_smoke_demo_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the demo authentication type using a valid VID
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "individualIdType": "VID",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "demo"}],
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_VID_Invalid_Unlock_Seconds_demo_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the demo authentication type using valid UIN with an invalid unlockForSeconds
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
	    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
	    "individualIdType": "VID",
        "unlockForSeconds": "tt",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "demo"}],
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
        {
            "errorCode": "RES-SER-410",
            "message": "$IGNORE$"
        }
    ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Valid_UIN_smoke_Face_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the face authentication type using a valid UIN
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_UIN_Invalid_Unlock_Seconds_Face_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the face authentication type using valid UIN with an invalid unlockForSeconds
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "tt",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
        {
            "errorCode": "RES-SER-410",
            "message": "$IGNORE$"
        }
    ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Valid_VID_smoke_Face_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the face authentication type using a valid VID
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "individualIdType": "VID",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_VID_Invalid_Unlock_Seconds_Face_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the face authentication type using valid VID with an invalid unlockForSeconds
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
	    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
	    "individualIdType": "VID",
        "unlockForSeconds": "tt",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
        {
            "errorCode": "RES-SER-410",
            "message": "$IGNORE$"
        }
    ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Valid_UIN_smoke_Finger_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the finger authentication type using a valid UIN
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_Positive_TDEA_smoke_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Finger"}],
        "otp": "$ID:AddIdentity_Positive_TDEA_smoke_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_TDEA_smoke_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_UIN_Invalid_Unlock_Seconds_Finger_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the finger authentication type using valid UIN with an invalid unlockForSeconds
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "tt",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Finger"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
        {
            "errorCode": "RES-SER-410",
            "message": "$IGNORE$"
        }
    ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Valid_VID_smoke_Finger_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the finger authentication type using a valid VID
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "individualIdType": "VID",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Finger"}],
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_VID_Invalid_Unlock_Seconds_Finger_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the finger authentication type using valid VID with an invalid unlockForSeconds
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
	    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
	    "individualIdType": "VID",
        "unlockForSeconds": "tt",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Finger"}],
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
        {
            "errorCode": "RES-SER-410",
            "message": "$IGNORE$"
        }
    ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Valid_VID_smoke_Iris_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the Iris authentication type using a valid VID
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "individualIdType": "VID",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"}],
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_VID_Invalid_Unlock_Seconds_Iris_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the iris authentication type using valid VID with an invalid unlockForSeconds
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
	    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
	    "individualIdType": "VID",
        "unlockForSeconds": "tt",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"}],
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
        {
            "errorCode": "RES-SER-410",
            "message": "$IGNORE$"
        }
    ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Valid_UIN_smoke_Iris_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the iris authentication type using a valid UIN
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_Positive_PRE_smoke_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"}],
        "otp": "$ID:AddIdentity_Positive_PRE_smoke_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_PRE_smoke_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_UIN_Invalid_Unlock_Seconds_Iris_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the iris authentication type using valid UIN with an invalid unlockForSeconds
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "tt",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
        {
            "errorCode": "RES-SER-410",
            "message": "$IGNORE$"
        }
    ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_UIN_Missing_Unlock_Seconds_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using a valid UIN but with the unlockForSeconds parameter missing
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "$REMOVE$",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
        {
            "errorCode": "RES-SER-410",
            "message": "$IGNORE$"
        }
    ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_VID_Missing_Unlock_Seconds_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using a valid VID but with the unlockForSeconds parameter missing
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
	    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
	    "individualIdType": "VID",
        "unlockForSeconds": "$REMOVE$",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"}],
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
        {
            "errorCode": "RES-SER-410",
            "message": "$IGNORE$"
        }
    ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_InValid_AuthType_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type with an invalid authtype
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_Positive_TRE_smoke_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "@3###CE"}],
        "otp": "$ID:AddIdentity_Positive_TRE_smoke_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_TRE_smoke_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_AuthUnLock_InValid_UIN_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type with an invalid UIN
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "48@3###4709",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_Positive_TRE_smoke_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_TRE_smoke_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_AuthUnLock_missing_UIN_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type with a missing UIN
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$REMOVE$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_Positive_TRE_smoke_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_TRE_smoke_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_AuthUnLock_InValid_OTP_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using an invalid OTP
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_Positive_TRE_smoke_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-FACE"}],
        "otp": "1#@@311",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_TRE_smoke_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "RES-SER-422",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_AuthUnLock_TransactionMismatch_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using mismatched transaction
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "1237890",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "RES-SER-422",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_AuthUnLock_Invalid_Id_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using an invalid ID
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mothlock",
        "version": "v1",
        "authType": [{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_AuthUnLock_missing_Id_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using missing ID
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "$REMOVE$",
        "version": "v1",
        "authType": [{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_AuthUnLock_InValid_version_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using an invalid version
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "@333#1",
        "authType": [{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_AuthUnLock_Missing_version_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using missing version
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "$REMOVE$",
        "authType": [{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_AuthUnLock_InvalidTimestamp_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using an invalid timestamp
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "T@345IMP",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_AuthUnLock_Missing_Timestamp_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using missing timestamp
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$REMOVE$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Invalid_Authtype_Otp_UIN_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using an invalid authtype-otp and UIN
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "otp"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_For_30secs_Valid_UIN_All:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using the UIN for 30 seconds
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "30",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"},{auth: "demo"},{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_For_30secs_Valid_VID_All:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using the VID for 30 seconds
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "individualIdType": "VID",
        "unlockForSeconds": "30",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"},{auth: "demo"},{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Empty_transactionID_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using an empty transactionId
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"},{auth: "demo"},{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
      "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Empty_individualId_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using an empty individualId
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"},{auth: "demo"},{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
      "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Empty_requesttime_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using an empty requesttime
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"},{auth: "demo"},{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
      "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Empty_id_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using an empty ID
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "",
        "version": "v1",
        "authType": [{auth: "bio-Iris"},{auth: "demo"},{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
      "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Empty_otp_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using an empty OTP
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"},{auth: "demo"},{auth: "bio-FACE"}],
        "otp": "",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
      "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Valid_UIN_EmptyChannel_Invalid_Neg:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using valid UIN with an empty channel
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"},{auth: "demo"},{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTPAsEmpty",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "OTP is invalid"
    }
  ],
  "sendOtpResp":{
  		"errors": [
    {
      "errorCode": "IDA-OTA-008",
      "errorMessage": "$IGNORE$"
    }
  ],
        "sendOtpResTemplate":"resident/error"
    }
}'

   Resident_AuthUnLock_Valid_UIN_EmailChannel_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using a valid UIN with the email channel
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"},{auth: "demo"},{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTPAsEmail",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResultForEmail",
        "maskedEmail": "$IGNORE$"
       }
}'

   Resident_AuthUnLock_Valid_UIN_PhoneChannel_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using a valid UIN through the phone channel
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"},{auth: "demo"},{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_PHONE$@phone",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTPAsPhone",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResultForPhone",
        "maskedMobile": "$IGNORE$"
        }
}'

   Resident_AuthUnLock_Forsecs_Valid_UIN_smoke_Finger_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the finger authentication type using a valid UIN for seconds
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_Invalid_Scen_Vid_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Finger"}],
        "otp": "$ID:AddIdentity_Invalid_Scen_Vid_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Invalid_Scen_Vid_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Forsecs_Valid_UIN_smoke_Face_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the face authentication type using a valid UIN for seconds
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_Invalid_Scen_Vid_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_Invalid_Scen_Vid_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Invalid_Scen_Vid_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Forsecs_Valid_UIN_smoke_Iris_Pos:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the iris authentication type using a valid UIN for seconds
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_Invalid_Scen_Vid_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"}],
        "otp": "$ID:AddIdentity_Invalid_Scen_Vid_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Invalid_Scen_Vid_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_AuthUnLock_Valid_UIN_Transactions_All:
      endPoint: /resident/v1/req/auth-unlock
      description: Unlock the authentication type using valid UIN and transactions
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/AuthUnLock/createAuthUnLock
      outputTemplate: resident/AuthUnLock/createAuthUnLockResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_To_Check_Ten_Transactions_smoke_Pos_UIN$",
        "individualIdType": "UIN",
        "unlockForSeconds": "1",
        "requesttime": "$TIMESTAMP$",
        "id": "mosip.resident.authunlock",
        "version": "v1",
        "authType": [{auth: "bio-Iris"},{auth: "demo"},{auth: "bio-FACE"}],
        "otp": "$ID:AddIdentity_withValidParameters_To_Check_Ten_Transactions_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_To_Check_Ten_Transactions_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'


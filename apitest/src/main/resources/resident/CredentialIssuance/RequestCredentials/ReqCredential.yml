RequestCredentials:
   Resident_RequestCredentials_euin_VID_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request credentials using valid EUIN and VID with other valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "euin",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_reprint_VID_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request reprint credentials using VID and other valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "reprint",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_Qrcode_VID_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request QRcode credentials using VID and other valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_VID_InValid_otp:
      endPoint: /resident/v1/req/credential
      description: Request credentials using a VID with an invalid OTP
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "reprint",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "asdgf",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
    {
      "errorCode": "IDA-MLC-018",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_VID_InValid_transactionID:
      endPoint: /resident/v1/req/credential
      description: Request credentials using a VID with an invalid transactionID
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/error
      input: '{
        "transactionID": "asfvsafv",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "reprint",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
    {
      "errorCode": "IDA-MLC-018",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_VID_empty_encryptionKey_smoke:
      endPoint: /resident/v1/req/credential
      description: Request credentials using a VID with an empty encryptionKey
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "reprint",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_VID_null_encryptionKey_smoke:
      endPoint: /resident/v1/req/credential
      description: Request credentials using a VID with null encryptionKey
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "encryptionKey": "null",
        "version": "v1",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_VID_missing_encryptionKey_Valid:
      endPoint: /resident/v1/req/credential
      description: Request credentials using a VID with missing encryptionKey
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "encryptionKey": "$REMOVE$",
        "version": "v1",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_VID_encrypt_false_smoke:
      endPoint: /resident/v1/req/credential
      description: Request credentials using a VID with encrypt false
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "qrcode",
        "encrypt": "false",
        "encryptionKey": "abc123",
        "version": "v1",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_euin_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request credentials using a EUIN and valid inputs 
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
        "credentialType": "euin",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_printUIN_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request printUIN credentials using valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
        "credentialType": "reprint",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_Qrcode_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request QRcode credentials using valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_invalidd_individualid_neg_sid:
      endPoint: /resident/v1/req/credential
      description: Request credentials using an invalid individualId
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "asfgefv",
        "credentialType": "qrcode",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "otp": "$ID:AddIdentity_Positive_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_invalid_individualid_neg_sid:
      endPoint: /resident/v1/req/credential
      description: Request credentials using an invalid individualId
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "29874",
        "credentialType": "qrcode",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "otp": "$ID:AddIdentity_Positive_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "RES-SER-410"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_missing_individualid_neg_sid:
      endPoint: /resident/v1/req/credential
      description: Request credentials using missing individualId
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$REMOVE$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "otp": "$ID:AddIdentity_Positive_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_invalid_otp:
      endPoint: /resident/v1/req/credential
      description: Request credentials using an invalid OTP
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "encryptionKey": "abc123",
        "version": "v1",
        "otp": "asfgef",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "IDA-MLC-018",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_invalid_transactionID:
      endPoint: /resident/v1/req/credential
      description: Request credentials using an invalid transactionId
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/error
      input: '{
        "transactionID": "fkuyfuj",
        "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "encryptionKey": "abc123",
        "version": "v1",
        "otp": "$ID:AddIdentity_Positive_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "IDA-MLC-018",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_empty_encryptionKey_smoke:
      endPoint: /resident/v1/req/credential
      description: Request credentials using an empty encryptionKey
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "encryptionKey": "",
        "version": "v1",
        "otp": "$ID:AddIdentity_Positive_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_null_encryptionKey_smoke:
      endPoint: /resident/v1/req/credential
      description: Request credentials using null encryptionKey
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "encryptionKey": "null",
        "version": "v1",
        "otp": "$ID:AddIdentity_Positive_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_missing_encryptionKey_invalid:
      endPoint: /resident/v1/req/credential
      description: Request credentials using missing encryptionKey
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "encryptionKey": "$REMOVE$",
        "version": "v1",
        "otp": "$ID:AddIdentity_Positive_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_encrypt_false_smoke:
      endPoint: /resident/v1/req/credential
      description: Request credentials making encrypt false.
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
        "credentialType": "qrcode",
        "encrypt": "false",
        "encryptionKey": "abc123",
        "version": "v1",
        "otp": "$ID:AddIdentity_Positive_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_euin_UIN_With_Additional_Data_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request EUIN credentials using UIN with additional data and valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredentialWithAdditionalData
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
        "credentialType": "euin",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_euin_VID_With_Additional_Data_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request EUIN credentials using VID with additional data and valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredentialWithAdditionalData
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "euin",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_reprint_VID_With_Additional_Data_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request reprint credentials using VID with additional data and valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredentialWithAdditionalData
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "reprint",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_reprint_UIN_With_Additional_Data_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request reprint credentials using UIN with additional data and valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredentialWithAdditionalData
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
        "credentialType": "reprint",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_Qrcode_VID_With_Additional_Data_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request QRcode credentials using VID with additional data and valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredentialWithAdditionalData
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_Qrcode_UIN_With_Additional_Data_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request QRcode credentials using UIN with additional data and valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredentialWithAdditionalData
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_euin_UIN_With_Sharable_Attributes_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request EUIN credentials using UIN with sharable attributes and valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredentialWithSharableAttributes
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
        "credentialType": "euin",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_euin_VID_With_Sharable_Attributes_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request EUIN credentials using VID with sharable attributes and valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredentialWithSharableAttributes
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "euin",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_reprint_VID_With_Sharable_Attributes_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request reprint credentials using VID with sharable attributes and valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredentialWithSharableAttributes
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "reprint",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_reprint_UIN_With_Sharable_Attributes_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request reprint credentials using UIN with sharable attributes and valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredentialWithSharableAttributes
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
        "credentialType": "reprint",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_Qrcode_VID_With_Sharable_Attributes_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request QRcode credentials using VID with sharable attributes and valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredentialWithSharableAttributes
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_Qrcode_UIN_With_Sharable_Attributes_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request QRcode credentials using UIN with sharable attributes and valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredentialWithSharableAttributes
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_ValidParam_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_VID_Empty_otp_Neg:
      endPoint: /resident/v1/req/credential
      description: Request credentials using VID with an empty OTP
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "reprint",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_VID_Empty_transactionID_Neg:
      endPoint: /resident/v1/req/credential
      description: Request credentials using VID with an empty transactionID
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/error
      input: '{
        "transactionID": "",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "reprint",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_Empty_otp_Neg:
      endPoint: /resident/v1/req/credential
      description: Request credentials using UIN with an empty OTP
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "encryptionKey": "abc123",
        "version": "v1",
        "otp": "",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
   Resident_RequestCredentials_Empty_transactionID_Neg:
      endPoint: /resident/v1/req/credential
      description: Request credentials using UIN with an empty transactionID
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/error
      input: '{
        "transactionID": "",
        "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "encryptionKey": "abc123",
        "version": "v1",
        "otp": "$ID:AddIdentity_Positive_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_Empty_CredentialType_Neg:
      endPoint: /resident/v1/req/credential
      description: Request credentials using UIN with an empty credentialType
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
        "credentialType": "",
        "encrypt": "true",
        "encryptionKey": "abc123",
        "version": "v1",
        "otp": "$ID:AddIdentity_Positive_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
    {
      "errorCode": "RES-SER-410"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_Empty_individualId_Neg:
      endPoint: /resident/v1/req/credential
      description: Request credentials using UIN with an empty individualId
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "",
        "credentialType": "qrcode",
        "encrypt": "true",
        "encryptionKey": "abc123",
        "version": "v1",
        "otp": "$ID:AddIdentity_Positive_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "$IGNORE$"
    }
  ],
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_Empty_version_Pos:
      endPoint: /resident/v1/req/credential
      description: Request credentials using UIN with an empty version
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "encryptionKey": "abc123",
        "version": "",
        "otp": "$ID:AddIdentity_Positive_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_Positive_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_Email_Channel_Pos:
      endPoint: /resident/v1/req/credential
      description: Request credentials using UIN with an email channel
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_UIN$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "encryptionKey": "abc123",
        "version": "",
        "otp": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTPAsEmail",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   
  "sendOtpResp":{
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResultForEmail",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_Phone_Channel_Pos:
      endPoint: /resident/v1/req/credential
      description: Request credentials using UIN with phone channel
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_UIN$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "encryptionKey": "abc123",
        "version": "",
        "otp": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_PHONE$@phone",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTPAsPhone",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
   
  "sendOtpResp":{
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResultForPhone",
        "maskedMobile": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_EmptyChannel_Invalid_Neg:
      endPoint: /resident/v1/req/credential
      description: Request credentials using UIN with an empty channel
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_UIN$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "encryptionKey": "abc123",
        "version": "",
        "otp": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_ValidParameters_ChannelVerify_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTPAsEmpty",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
    {
      "errorCode": "RES-SER-410",
      "message": "OTP is invalid"
    }
  ],
  "sendOtpResp":{
	  "errors": [
	    {
	      "errorCode": "IDA-OTA-008",
	      "errorMessage": "$IGNORE$"
	    }
	  ],
	   "sendOtpResTemplate":"resident/error"
	    }
}'
   Resident_RequestCredentials_euinn_VID_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request EUIN credentials using VID with all valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
        "credentialType": "euin",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_ValidParam_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:GenerateVID_All_Valid_Smoke_Perpetual_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_euin_TempVid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request EUIN credentials using temporary VID with all valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:Generate_Temporary_VID_ONE_Valid_Smoke_sid_vid$",
        "credentialType": "euin",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_withValidParameters_To_Genrate_VID_Six_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:Generate_Temporary_VID_ONE_Valid_Smoke_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_euin_TempVid_TwoTimes_Neg:
      endPoint: /resident/v1/req/credential
      description: Request EUIN credentials using temporary VID two times
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:Generate_Temporary_VID_ONE_Valid_Smoke_sid_vid$",
        "credentialType": "euin",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_withValidParameters_To_Genrate_VID_Six_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:Generate_Temporary_VID_ONE_Valid_Smoke_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
    {
      "errorCode": "RES-SER-410"
    }
  ],
   "sendOtpResp":{
    "errors": [
      {
	      "errorCode": "IDA-MLC-023",
	      "errorMessage": "$IGNORE$"
	    }
	  ],
	   "sendOtpResTemplate":"resident/error"
	    }
}'


   Resident_RequestCredentials_euin_VID_CheckVidIs_REVOKED_Neg:
      endPoint: /resident/v1/req/credential
      description: Request EUIN credentials using revoked VID
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/error
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:Generate_Perpetual_VID_Valid_First_Smoke_sid_vid$",
        "credentialType": "euin",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_withValidParameters_ToCreate_PreVid_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:Generate_Perpetual_VID_Valid_First_Smoke_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "errors": [
    {
      "errorCode": "RES-SER-410"
    }
  ],
   "sendOtpResp":{
	  "errors": [
	    {
	      "errorCode": "IDA-MLC-018",
	      "errorMessage": "$IGNORE$"
	    }
	  ],
	   "sendOtpResTemplate":"resident/error"
	    }
}'

   Resident_RequestCredentials_euin_VID_Use_One_sid:
      endPoint: /resident/v1/req/credential
      description: Request EUIN credentials using one VID
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:Generate_Perpetual_VID_SecondTime_Smoke_sid_vid$",
        "credentialType": "euin",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_withValidParameters_ToCreate_PreVid_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:Generate_Perpetual_VID_SecondTime_Smoke_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_euin_VID_Use_sid:
      endPoint: /resident/v1/req/credential
      description: Request EUIN credentials using VID
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:Generate_Perpetual_VID_SecondTime_Smoke_sid_vid$",
        "credentialType": "euin",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "requestTime": "$TIMESTAMP$",
        "otp": "$ID:AddIdentity_withValidParameters_ToCreate_PreVid_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:Generate_Perpetual_VID_SecondTime_Smoke_sid_vid$",
    "individualIdType": "VID",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_printUIN_Transactions_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request print UIN transactions credentials using UIN with all valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_To_Check_Ten_Transactions_smoke_Pos_UIN$",
        "credentialType": "reprint",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "otp": "$ID:AddIdentity_withValidParameters_To_Check_Ten_Transactions_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_To_Check_Ten_Transactions_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   Resident_RequestCredentials_Transactions_Qrcode_All_Valid_Smoke_sid:
      endPoint: /resident/v1/req/credential
      description: Request QRcode transactions credentials using UIN with all valid inputs
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: resident/CredentialIssuance/RequestCredentials/reqCredential
      outputTemplate: resident/CredentialIssuance/RequestCredentials/ReqCredentialResult
      input: '{
        "transactionID": "$TRANSACTIONID$",
        "individualId": "$ID:AddIdentity_withValidParameters_To_Check_Ten_Transactions_smoke_Pos_UIN$",
        "credentialType": "qrcode",
        "encrypt": "true",
        "version": "v1",
        "encryptionKey": "abc123",
        "otp": "$ID:AddIdentity_withValidParameters_To_Check_Ten_Transactions_smoke_Pos_EMAIL$",
        "sendOtp":{
    "transactionID": "$TRANSACTIONID$",
    "requestTime": "$TIMESTAMP$",
    "individualId": "$ID:AddIdentity_withValidParameters_To_Check_Ten_Transactions_smoke_Pos_UIN$",
    "individualIdType": "UIN",
    "sendOtpReqTemplate": "resident/SendOTP/createSendOTP",
    "sendOtpEndPoint": "/resident/v1/req/otp"
    }
    }'
      output: '{
  
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"resident/SendOTP/createSendOTPResult",
        "maskedEmail": "$IGNORE$"
    }
}'
package io.mosip.resident.service;

import java.util.List;
import java.util.Map;

import io.mosip.resident.dto.DocumentDTO;
import io.mosip.resident.dto.ResponseDTO;
import org.springframework.web.multipart.MultipartFile;

import io.mosip.resident.dto.DocumentRequestDTO;
import io.mosip.resident.dto.DocumentResponseDTO;
import io.mosip.resident.exception.ResidentServiceCheckedException;

/**
 * It's a service class that uploads a document to the object store and returns
 * the document metadata.
 * 
 * @author Manoj SP
 */
public interface DocumentService {

        /**
         * It uploads a file to the object store
         * 
         * @param transactionId This is the transaction id of the resident.
         * @param file          The file to be uploaded
         * @param request       DocumentRequestDTO
         * @return The response is a DocumentResponseDTO object.
         */
        DocumentResponseDTO uploadDocument(String transactionId, MultipartFile file,
                        DocumentRequestDTO request) throws ResidentServiceCheckedException;

        /**
         * It fetches all the documents metadata from the object store
         * 
         * @param transactionId This is the transaction ID that is generated by the
         *                      resident service.
         * @return A list of DocumentResponseDTO objects.
         */
        Map<DocumentResponseDTO, String> getDocumentsWithMetadata(String transactionId)
                        throws ResidentServiceCheckedException;

        /**
         * It fetches all the documents from the object store and returns a map of
         * document metadata
         * and document content
         * 
         * @param transactionId The transaction ID of the transaction for which the
         *                      documents are to be
         *                      fetched.
         * @return A map of DocumentResponseDTO and String.
         */
        List<DocumentResponseDTO> fetchAllDocumentsMetadata(String transactionId)
                        throws ResidentServiceCheckedException;

        /**
         * It fetches the document  from the object store
         * @param transactionId This is the transaction ID
         * @param documentId This is the document id
         */
        DocumentDTO fetchDocumentByDocId(String transactionId, String documentId) throws ResidentServiceCheckedException;

        ResponseDTO deleteDocument(String transactionId, String documentId) throws ResidentServiceCheckedException;
}

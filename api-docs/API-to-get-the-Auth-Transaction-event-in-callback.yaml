openapi: 3.1.0
x-stoplight:
  id: xhljgo1cjk958
info:
  title: API to get the Auth Transaction event in callback
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /callback​/authTransaction:
    post:
      summary: /callback​/authTransaction
      operationId: post-callback-authTransaction
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: 'null'
                  version:
                    type: string
                  responsetime:
                    type: string
                  metadata:
                    type: 'null'
                  response:
                    type: 'null'
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        errorCode:
                          type: string
                        message:
                          type: string
                x-examples:
                  example-1:
                    id: null
                    version: v1
                    responsetime: '2022-06-10T12:00:43.226Z'
                    metadata: null
                    response: null
                    errors:
                      - errorCode: RES-SER-418
                        message: 'KER-WSC-106 --> Error occured while verifing authenticated content :- header for signature is empty or null'
              examples:
                Success:
                  value:
                    id: null
                    version: v1
                    responsetime: '2022-06-10T12:00:43.226Z'
                    metadata: null
                    response: null
                    errors:
                      - errorCode: RES-SER-418
                        message: 'KER-WSC-106 --> Error occured while verifing authenticated content :- header for signature is empty or null'
      description: This API is to get the Auth Transaction event in callback for each Online Verification Partner and store it in auth_transactions table along with the Online Verification Partner ID in a new column.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                publisher:
                  type: string
                topic:
                  type: string
                publishedOn:
                  type: string
                event:
                  type: object
                  properties:
                    id:
                      type: string
                    transactionId:
                      type: string
                    type:
                      type: object
                      properties:
                        namespace:
                          type: string
                        name:
                          type: string
                    timestamp:
                      type: string
                    dataShareUri:
                      type: string
                    data:
                      type: object
                      properties:
                        additionalProp1:
                          type: object
                          properties: {}
                        additionalProp2:
                          type: object
                          properties: {}
                        additionalProp3:
                          type: object
                          properties: {}
              x-examples:
                example-1:
                  publisher: string
                  topic: string
                  publishedOn: string
                  event:
                    id: string
                    transactionId: string
                    type:
                      namespace: string
                      name: string
                    timestamp: string
                    dataShareUri: string
                    data:
                      additionalProp1: {}
                      additionalProp2: {}
                      additionalProp3: {}
            examples:
              example-1:
                value:
                  publisher: string
                  topic: string
                  publishedOn: string
                  event:
                    id: string
                    transactionId: string
                    type:
                      namespace: string
                      name: string
                    timestamp: string
                    dataShareUri: string
                    data:
                      additionalProp1: {}
                      additionalProp2: {}
                      additionalProp3: {}
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified

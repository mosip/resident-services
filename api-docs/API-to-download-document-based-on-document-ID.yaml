openapi: 3.1.0
x-stoplight:
  id: e01g8ipbdx5rr
info:
  title: API to download document based on document ID
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  '/document/{document-id}':
    parameters:
      - schema:
          type: string
        name: document-id
        in: path
        required: true
    get:
      summary: Get Document for document-id (encoded bytes)
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  version:
                    type: string
                  responsetime:
                    type: string
                  metadata:
                    type: 'null'
                  response:
                    type: object
                    properties:
                      document:
                        type: string
                  errors:
                    type: 'null'
                x-examples:
                  example-1:
                    id: mosip.resident.document.get
                    version: v1
                    responsetime: '2022-08-03T12:18:31.701Z'
                    metadata: null
                    response:
                      document: base64 encoded file
                    errors: null
              examples:
                Success:
                  value:
                    id: mosip.resident.document.get
                    version: v1
                    responsetime: '2022-08-03T12:18:31.701Z'
                    metadata: null
                    response:
                      document: base64 encoded file
                    errors: null
                'Error: Document not found for transactionId':
                  value:
                    id: mosip.resident.document.get
                    version: '1.0'
                    responsetime: '2022-06-09T06:34:35.775Z'
                    metadata: {}
                    response: null
                    errors:
                      - errorCode: RES-SER-461
                        message: 'No document found for transactionID: 1234567890 & documentId: 79baf26e-bcb8-581d-aa7a-fc06336ebcda'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: 'null'
                  version:
                    type: 'null'
                  responsetime:
                    type: string
                  metadata:
                    type: 'null'
                  response:
                    type: 'null'
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        errorCode:
                          type: string
                        message:
                          type: string
                x-examples:
                  Example 1:
                    id: null
                    version: null
                    responsetime: '2022-10-07T09:22:04.631Z'
                    metadata: null
                    response: null
                    errors:
                      - errorCode: KER-ATH-401
                        message: Authentication Failed
              examples:
                Example 1:
                  value:
                    id: null
                    version: null
                    responsetime: '2022-10-07T09:22:05.631Z'
                    metadata: null
                    response: null
                    errors:
                      - errorCode: KER-ATH-401
                        message: Authentication Failed
      operationId: get-document-document-id
      parameters:
        - schema:
            type: string
          in: query
          name: transactionId
          required: true
          description: Transaction ID used while uploading the document
        - schema:
            type: string
          in: cookie
          name: Authorization
          description: Authorization token is used to validate the permissions carried by the user.
          required: true
        - schema:
            type: string
          in: cookie
          name: id_token
          description: ID token is used to verify which user has logged in.
          required: true
      description: |
        In “update my data”, when a document is uploaded, we want to preview it in UI, for that to happen it needs to be downloaded by an API which will have document id as input and downloaded file as output (hence enabling the resident to preview it in UI)

        Input of the API=document id

        Output of the API=downloaded file
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified

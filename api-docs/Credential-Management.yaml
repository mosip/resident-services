openapi: 3.1.0
info:
  title: Credential Management APIs
  description: Credential Management APIs
  version: 1.0.0
  contact:
    url: 'https://www.govstack.global/'
paths:
  /share-credential:
    post:
      description: Format for sharing identity credentials with an identity partner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareCredentialInfo'
      responses:
        '200':
          description: EventId generated successfully.
          headers:
            eventId:
              description: The eventId for the share credential format
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareCredentialResp'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
  '/events/{eventId}?language=LANGCODE':
    get:
      description: Get the status by eventID
      parameters:
        - in: path
          name: eventId
          schema:
            type: integer
          required: true
          description: Event ID to get the status
        - in: query
          name: language
          schema:
            type: string
          required: true
          description: Language Code in 3 letters. Example- eng
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResp'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
      security:
        - Authorization: []
        - ID_token: []
  /download/personalized-card:
    post:
      description: Download the personalized UIN Card
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadCardInfo'
      responses:
        '200':
          description: OK - The PDF Bytes
          headers:
            eventId:
              description: The eventId for the share credential format
              schema:
                type: string
                maxLength: 16
                minLength: 16
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
      security:
        - Authorization: []
        - ID_token: []
  /update-uin:
    description: This request will authenticate an Individual based on provided OTP and respond with RID after successfully placing update request to Registration Processor. Notification will be sent to phone/email.
    post:
      description: Update UIN request raised by the resident/citizen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUINInfo'
      responses:
        '200':
          description: 'OK, update is successful.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWrapperObject'
      security:
        - Authentication: []
  '/service-history/{langCode}':
    get:
      description: Get the status by eventID
      parameters:
        - in: path
          name: langCode
          schema:
            type: string
          required: true
          description: Language Code in 3 letters. Example- eng
        - in: query
          name: fromDate
          schema:
            type: string
          required: true
          description: Start date of the request inclusive; the default date will be the 1st of January of that year
        - in: query
          name: pageFetch
          schema:
            type: string
          description: 'integer greater than 0, default is 10'
        - in: query
          name: pageStart
          schema:
            type: string
          description: 'integer starting from 0, default is 0'
        - in: query
          name: searchText
          schema:
            type: string
          description: This will be used to look for Event Id- string greater than 0 but not more than 30; >= 0 characters; <= 30 characters
        - in: query
          name: serviceType
          schema:
            type: string
          description: 'The service type in general. It can map to different request types. Possible values: AUTHENTICATION_REQUEST, SERVICE_REQUEST,DATA_UPDATE_REQUEST,ID_MANAGEMENT_REQUEST,DATA_SHARE_REQUEST,ALL; default is ALL'
        - in: query
          name: sortType
          schema:
            type: string
            default: ASC
          description: 'ASC/DESC, default is ASC'
        - in: query
          name: statusFilter
          schema:
            type: string
          description: 'Comma separated service types status code- optional. This can be one of - ALL,SUCCESS,IN_PROGRESS,FAILED'
        - in: query
          name: toDate
          schema:
            type: string
          description: End date of the request inclusive; the default date will be the date on which this transaction is being done (date today
        - in: header
          name: locale
          schema:
            type: string
          required: true
          description: Locale based on Language and country.Used in date time formatting. Ex. en-US
        - in: header
          name: time-zone-offset
          schema:
            type: string
          required: true
          description: Used in time conversion per the client on any timestamps returned in the response. Ex. -330 - for India
      security:
        - Authorization: []
        - ID_token: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceHistoryInfo'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
  /updateIdentity:
    patch:
      description: Activate/Deactivate UIN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIdentityRequest'
      responses:
        '200':
          description: UIN activation status successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateIdentityResponse'
        '204':
          description: No content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /unblock:
    post:
      description: Command to be used by administrators to unblock UIN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UINAdminRequest'
      responses:
        '200':
          description: UIN unblocked successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UINAdminResponse'
  /block:
    post:
      description: Command to be used by administrators to block UIN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UINAdminRequest'
      responses:
        '200':
          description: UIN blocked successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UINAdminResponse'
components:
  schemas:
    ShareCredentialInfo:
      type: object
      properties:
        id:
          type: string
          default: mosip.resident.share.credential
          description: id to hit API
        request:
          type: object
          description: Request body to share credential
          properties:
            partnerId:
              type: string
              description: Id to which credentials will be shared
              default: mosip.resident.share.credential
            sharableAttributes:
              type: array
              items:
                properties:
                  attributeName:
                    type: string
                    description: 'Example: dateOfBirth'
                    default: dateOfBirth
                  format:
                    type: string
                    description: 'Example: DDMMYYYY'
                  isMasked:
                    type: boolean
                    description: boolean value whether to mask or not
                    default: true
            purpose:
              type: string
              description: Sharing Credential with Print Partner
              pattern: '^[\\r\\nA-Za-z0-9 .,''\\-]+$'
            consent:
              type: string
              description: consent whether Accepted or denied
        requesttime:
          type: string
          description: '2021-10-19T17:01:59.538Z'
        version:
          type: string
          description: 'Example: 1.0'
    ShareCredentialResp:
      type: object
      properties:
        id:
          type: string
          description: 'id to share credential Ex:- resident.share.credential'
        version:
          type: string
          description: version to share credential
          default: '1.0'
        responsetime:
          type: string
          description: 'local timestamp Ex:- 2022-06-23T12:00:40.326Z'
        metadata:
          type: object
        response:
          type: object
          properties:
            status:
              type: string
              description: 'status of share credential API Ex:-Success'
        errors:
          type: object
          description: Errors will be shown with error code and value
    EventResp:
      type: object
      properties:
        id:
          type: string
          description: id of get event status API
        version:
          type: string
          description: version of API
        response:
          type: object
          properties:
            eventId:
              type: string
              description: Randomly generated 16 digit number
              minLength: 16
              maxLength: 16
            eventType:
              type: string
              description: Type of event like Authentication type
            eventStatus:
              type: string
              description: 'Status of request whether succss, failure or in-progress'
            individualId:
              type: string
              description: UIN/Vid of logged in user
            summary:
              type: string
              description: Having short summary about the event id.
            timestamp:
              type: string
              description: local timestamp
            info:
              type: object
              description: Info for multiple attributes
              properties:
                purpose:
                  type: string
                  description: purpose to share credential like sharing to some other parters
                applicantName:
                  type: string
                  description: name of applicant
                partnerId:
                  type: string
                  description: parter id to which we want to share credential
                partnerLogo:
                  type: string
                  description: Logo of partner if any
                partnerName:
                  type: string
                  description: name of partner
                paymentStatus:
                  type: string
                  description: status of payment
                partnerTransactionId:
                  type: string
                  description: unique transaction id of payment if any
                deliveryAddress:
                  type: string
                  description: delieveryAddress of user in case of order physical card.
                authenticationMode:
                  type: string
                  description: mode of authentication like OTP
                vidType:
                  type: string
                  description: 'type of vid like perpetual which means permanent , one-time(which means it can be used only once)'
                vid:
                  type: string
                  description: virtual id that is created with the help of uin
                attributeList:
                  type: string
                  description: 'list of attributes like firstName, email'
                downloadCardLink:
                  type: string
                  description: direct link to download
                orderTrackingLink:
                  type: string
                  description: direct link to track order status
                trackingId:
                  type: string
                  description: id to track order
        requestTime:
          type: string
          description: timestamp when API executes
    DownloadCardInfo:
      type: object
      properties:
        id:
          type: string
          description: id for downloading card
        version:
          type: string
          description: version of API
        requesttime:
          type: string
          description: timestamp when we hit API
        request:
          type: object
          properties:
            html:
              type: string
              description: html input of download personalized card which will be later converted to PDF
    ResponseWrapperObject:
      required:
        - response
      type: object
      properties:
        id:
          type: string
          description: mosip.resident.updateuin
        version:
          type: string
          description: '1.0'
        responsetime:
          type: string
          description: '2024-03-21T09:14:42.537Z'
        response:
          type: object
          description: Give response such as Registration id and 1 message like  Notification has been sent to the provided contact detail(s)
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ServiceError'
    ServiceError:
      type: object
      properties:
        errorCode:
          type: string
        message:
          type: string
    UpdateUINInfo:
      type: object
      properties:
        id:
          type: string
          description: id to hit update uin API.
        version:
          type: string
          description: version of API
        requestTime:
          type: string
          description: timestamp when we get resposne.
        request:
          type: object
          properties:
            transactionID:
              type: string
              description: transactionId will be shown that is used to send otp.
            individualId:
              type: string
              description: uin/vid which is used to send otp for updating uin
            individualIdType:
              type: string
              description: type of individual id like uin/vid
            otp:
              type: string
              description: otp to verify mobile number
            identityJson:
              type: string
              description: base 64 encoded identity value that we want to update.
            documents:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  value:
                    type: string
    ServiceHistoryInfo:
      type: object
      properties:
        id:
          type: string
          description: id to get service history API
        version:
          type: string
          description: version of service history API
        errors:
          type: array
          items:
            type: object
            properties:
              errorCode:
                type: string
              errorMessage:
                type: string
        response:
          type: object
          properties:
            pageNo:
              type: integer
              description: starting number of page from where history needs to be fetched.
            pageSize:
              type: integer
              description: number of pages
            totalItems:
              type: integer
              description: total items across all pages
            totalPages:
              type: integer
              description: total number of pages
            data:
              type: array
              items:
                properties:
                  eventId:
                    type: string
                    description: Random 16 digits eventId
                  eventDescription:
                    type: string
                    description: details of events
                  eventStatus:
                    type: string
                    description: status of event
                  timeStamp:
                    type: string
                    description: timestamp of response
                  requestType:
                    type: string
                    description: type of request
        responseTime:
          type: string
    UpdateIdentityRequest:
      type: object
      properties:
        id:
          type: string
          description: Example - govstack.updateIdentity
        version:
          type: string
          description: v1
        requesttime:
          type: string
          description: timestamp when API executes
        metaData:
          type: object
        request:
          type: object
          properties:
            status:
              type: string
              description: status of updateIdentity APi
            identity:
              type: object
              description: identity which user wants to update
            documents:
              type: array
              items:
                properties:
                  category:
                    type: string
                    description: cateogory like proof of resident
                  value:
                    type: string
                    description: document value like pdf content
            verifiedAttributes:
              type: array
              items:
                properties:
                  attributeString:
                    type: string
            registrationId:
              type: string
              description: unique id created while registring uin
            uin:
              type: string
              description: unique value for each individual
    UpdateIdentityResponse:
      type: object
      properties:
        id:
          type: string
          description: Example - govstack.updateIdentity
        version:
          type: string
          description: v1
        responsetime:
          type: string
          description: timestamp
        metaData:
          type: object
        response:
          type: object
          properties:
            status:
              type: string
              description: status of API
            identity:
              type: object
              description: identity that user wants to update
            documents:
              type: array
              items:
                properties:
                  category:
                    type: string
                    description: cateogory like proof of resident
                  value:
                    type: string
                    description: document value like pdf content
            verifiedAttributes:
              type: array
              items:
                type: object
                properties:
                  attributeString:
                    type: string
        errors:
          type: array
          items:
            type: object
            properties:
              errorCode:
                type: string
              errorMessage:
                type: string
    UINAdminRequest:
      type: object
      properties:
        id:
          type: string
          description: id to hit API
        version:
          type: string
          description: version of API
        requesttime:
          type: string
          description: timestamp when API executed
        metadata:
          type: object
        request:
          type: object
          properties:
            id:
              type: string
            idType:
              type: string
            status:
              type: string
            expiryTimestamp:
              type: string
    UINAdminResponse:
      type: object
      properties:
        id:
          type: string
          description: id to hit API
        version:
          type: string
          description: version of API
        responsetime:
          type: string
          description: timestamp when API executed
        metadata:
          type: object
        response:
          type: object
          properties:
            id:
              type: string
              description: unique id
            idType:
              type: string
              description: type of id like uin/vid
            status:
              type: string
              description: status of API
            expiryTimestamp:
              type: string
              description: timestamp when it will expire
        errors:
          type: array
          items:
            type: object
            properties:
              errorCode:
                type: string
              message:
                type: string
    UnauthorizedError:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        responsetime:
          type: string
        metadata:
          type: object
        response:
          type: object
        errors:
          type: array
          items:
            type: object
            properties:
              errorCode:
                type: string
              errorMessage:
                type: string
  securitySchemes:
    Authorization:
      type: http
      scheme: string
      description: Authorization code received from /token endpoint
    ID_token:
      type: http
      scheme: string
      description: ID token received from /token endpoint
    Authentication:
      type: http
      scheme: string
      description: ID token received from /token endpoint
